{"version":3,"sources":["components/ModIcon.jsx","components/Header.jsx","components/NewItem.jsx","components/TodoItem.jsx","components/SummaryTab.jsx","components/SortTab.jsx","components/TodoContainer.jsx","components/App.jsx","index.jsx"],"names":["sunSVG","xmlns","viewBox","fill","fillRule","d","moonSVG","ModIcon","props","darkMode","toggleMode","modeIcon","className","onClick","Header","modeColor","id","NewItem","input","handleInputChange","handleSubmit","tabColor","onSubmit","type","value","onChange","placeholder","checkedIcon","stroke","crossIcon","TodoItem","name","completed","handleCompleted","handleDeleteItem","itemClassNames","nameClassNames","htmlFor","checked","SummaryTab","count","handleClearCompleted","summaryClassNames","SortTab","sort","handleSortItem","sortClassNames","TodoContainer","todoList","filter","item","length","todoItems","map","App","state","idCount","bind","this","setState","prevState","event","target","preventDefault","prevTodoList","newId","String","Number","concat","lastChild","targetId","parentElement","currentTarget","colorMode","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8eed4e31.chunk.js","sourcesContent":["\r\nfunction ModIcon(props) {\r\n    const darkMode = props.darkMode;\r\n    const toggleMode = props.toggleMode;\r\n    const modeIcon = darkMode ? sunSVG : moonSVG;\r\n\r\n    return (\r\n        <div className='mode-toggle-btn-container' onClick={toggleMode}>\r\n            {modeIcon}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst sunSVG = \r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-2 -2 30 30\">\r\n        <path fill=\"hsl(300, 100%, 100%)\" fillRule=\"evenodd\" d=\"M13 21a1 1 0 011 1v3a1 1 0 11-2 0v-3a1 1 0 011-1zm-5.657-2.343a1 1 0 010 1.414l-2.121 2.121a1 1 0 01-1.414-1.414l2.12-2.121a1 1 0 011.415 0zm12.728 0l2.121 2.121a1 1 0 01-1.414 1.414l-2.121-2.12a1 1 0 011.414-1.415zM13 8a5 5 0 110 10 5 5 0 010-10zm12 4a1 1 0 110 2h-3a1 1 0 110-2h3zM4 12a1 1 0 110 2H1a1 1 0 110-2h3zm18.192-8.192a1 1 0 010 1.414l-2.12 2.121a1 1 0 01-1.415-1.414l2.121-2.121a1 1 0 011.414 0zm-16.97 0l2.121 2.12A1 1 0 015.93 7.344L3.808 5.222a1 1 0 011.414-1.414zM13 0a1 1 0 011 1v3a1 1 0 11-2 0V1a1 1 0 011-1z\"/>\r\n    </svg>;\r\n\r\nconst moonSVG = \r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-2 -2 30 30\">\r\n        <path fill=\"hsl(0, 0%, 100%)\" fillRule=\"evenodd\" d=\"M13 0c.81 0 1.603.074 2.373.216C10.593 1.199 7 5.43 7 10.5 7 16.299 11.701 21 17.5 21c2.996 0 5.7-1.255 7.613-3.268C23.22 22.572 18.51 26 13 26 5.82 26 0 20.18 0 13S5.82 0 13 0z\"/>\r\n    </svg>\r\n\r\nexport default ModIcon;","import ModIcon from './ModIcon';\r\n\r\nfunction Header(props) {\r\n    const darkMode = props.darkMode;\r\n    const toggleMode = props.toggleMode;\r\n    const modeColor = darkMode ? 'dark' : 'light';\r\n\r\n    return (\r\n        <div id='header' className={modeColor}>\r\n            <h1>TODO</h1>\r\n            <ModIcon darkMode={darkMode} toggleMode={toggleMode} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","\r\nfunction NewItem(props) {\r\n    const input = props.input;\r\n    const handleInputChange = props.handleInputChange;\r\n    const handleSubmit = props.handleSubmit;\r\n    const darkMode = props.darkMode;\r\n    const tabColor = darkMode ? 'tab tab-dark' : 'tab tab-light';\r\n\r\n    return (\r\n        <form id=\"new-item\" className={tabColor} onSubmit={handleSubmit}>\r\n            <div className='checkbox-container'></div>\r\n            <input type=\"text\" value={input} onChange={handleInputChange} placeholder='Create a new todo...' />\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default NewItem;","\r\nfunction TodoItem(props) {\r\n    const id = props.id;\r\n    const name = props.name;\r\n    const completed = props.completed;\r\n    const darkMode = props.darkMode;\r\n    const handleCompleted = props.handleCompleted;\r\n    const handleDeleteItem = props.handleDeleteItem;\r\n    let itemClassNames = 'tab';\r\n    let nameClassNames = 'name-container';\r\n\r\n    darkMode ? itemClassNames += ' tab-dark' : itemClassNames += ' tab-light';\r\n    completed ? nameClassNames += ' completed' : nameClassNames += ' not-completed';\r\n\r\n    return (\r\n        <div id={id} className={itemClassNames +' todo-item'}>\r\n            <div className='checkbox-container'>\r\n                <label htmlFor={id+'-checkbox'}>\r\n                    <input id={id+'-checkbox'} type='checkbox' checked={completed} onChange={handleCompleted} />\r\n                    <div className=\"checkmark\">\r\n                        {checkedIcon}\r\n                    </div>\r\n                </label>\r\n            </div>\r\n            <label htmlFor={id+'-checkbox'} className={nameClassNames}>\r\n                {name}\r\n            </label>\r\n            <div className='delete-btn' onClick={handleDeleteItem}>\r\n                {crossIcon}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst checkedIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-5 -5 20 20\"><path fill=\"none\" stroke=\"#FFF\" stroke-width=\"2\" d=\"M1 4.304L3.696 7l6-6\"/></svg>;\r\n\r\nconst crossIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-2 -2 20 30\"><path fill=\"hsl(252, 4%, 72%)\" fillRule=\"evenodd\" d=\"M16.97 0l.708.707L9.546 8.84l8.132 8.132-.707.707-8.132-8.132-8.132 8.132L0 16.97l8.132-8.132L0 .707.707 0 8.84 8.132 16.971 0z\"/></svg>;\r\n\r\nexport default TodoItem;","\r\nfunction SummaryTab(props) {\r\n    const count = props.count;\r\n    const darkMode = props.darkMode;\r\n    const handleClearCompleted = props.handleClearCompleted;\r\n    let summaryClassNames = 'tab';\r\n\r\n    darkMode ? summaryClassNames += ' tab-dark' : summaryClassNames += ' tab-light';\r\n\r\n    return (\r\n        <div id='summary-tab' className={summaryClassNames}>\r\n            <p className='item-count'>\r\n                {count} items left\r\n            </p>\r\n            <button type='button' className='clear-btn' onClick={handleClearCompleted}>\r\n                Clear Completed\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SummaryTab;","\r\nfunction SortTab(props) {\r\n    const sort = props.sort;\r\n    const darkMode = props.darkMode;\r\n    const handleSortItem = props.handleSortItem;\r\n    let sortClassNames = 'tab';\r\n\r\n    darkMode ? sortClassNames += ' tab-dark' : sortClassNames += ' tab-light';\r\n\r\n    return (\r\n        <div id='sort-tab' className={sortClassNames}>\r\n            <input type=\"radio\" name=\"sort\" id=\"all\" onChange={handleSortItem} checked={sort === 'all'} />\r\n            <label htmlFor=\"all\">All</label>\r\n            <input type=\"radio\" name=\"sort\" id=\"active\" onChange={handleSortItem} checked={sort === 'active'} />\r\n            <label htmlFor=\"active\">Active</label>\r\n            <input type=\"radio\" name=\"sort\" id=\"completed\" onChange={handleSortItem} checked={sort === 'completed'} />\r\n            <label htmlFor=\"completed\">Completed</label>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SortTab;","import NewItem from './NewItem';\r\nimport TodoItem from './TodoItem';\r\nimport SummaryTab from './SummaryTab';\r\nimport SortTab from './SortTab';\r\n\r\nfunction TodoContainer(props) {\r\n    const input = props.input;\r\n    const handleInputChange = props.handleInputChange;\r\n    const sort = props.sort;\r\n    const handleSortItem = props.handleSortItem;\r\n    const handleCompleted = props.handleCompleted;\r\n    const handleDeleteItem = props.handleDeleteItem;\r\n    const handleSubmit =  props.handleSubmit;\r\n    const handleClearCompleted = props.handleClearCompleted;\r\n    const todoList = props.todoList;\r\n    const darkMode = props.darkMode;\r\n    const tabColor = darkMode ? 'dark-tab' : 'light-tab';\r\n    const count = todoList.filter((item) => !item.completed).length;\r\n\r\n    const todoItems = \r\n        (sort === 'active') ? \r\n            todoList\r\n                .filter((item) => !item.completed)\r\n                .map( (item) => <TodoItem \r\n                                    id={item.id}\r\n                                    name={item.name} \r\n                                    completed={item.completed} \r\n                                    handleCompleted={handleCompleted} \r\n                                    handleDeleteItem={handleDeleteItem} \r\n                                    darkMode={darkMode} \r\n                                    key={item.id} \r\n                                /> )\r\n        :(sort === 'completed') ? \r\n            todoList.filter((item) => item.completed)\r\n            .map( (item) => <TodoItem \r\n                                id={item.id}\r\n                                name={item.name} \r\n                                completed={item.completed} \r\n                                handleCompleted={handleCompleted} \r\n                                handleDeleteItem={handleDeleteItem} \r\n                                darkMode={darkMode} \r\n                                key={item.id} \r\n                            /> )\r\n        :todoList.map( (item) => <TodoItem \r\n                                    id={item.id}\r\n                                    name={item.name} \r\n                                    completed={item.completed} \r\n                                    handleCompleted={handleCompleted} \r\n                                    handleDeleteItem={handleDeleteItem} \r\n                                    darkMode={darkMode} \r\n                                    key={item.id} \r\n                                /> );\r\n\r\n    return (\r\n        <div id='todo-container' className={tabColor}>\r\n            <NewItem \r\n                input={input} \r\n                handleInputChange={handleInputChange} \r\n                handleSubmit={handleSubmit} \r\n                darkMode={darkMode} \r\n            />\r\n            <div className='todo-list-container'>\r\n                {todoItems}\r\n                <SummaryTab \r\n                    count={count}\r\n                    handleClearCompleted={handleClearCompleted}\r\n                    darkMode={darkMode}\r\n                />\r\n                <SortTab \r\n                    sort={sort}\r\n                    handleSortItem={handleSortItem}\r\n                    darkMode={darkMode}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoContainer;","import {Component} from 'react';\r\n\r\nimport Header from './Header';\r\nimport TodoContainer from './TodoContainer';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            darkMode: true,\r\n            input: '',\r\n            idCount: '0',\r\n            sort: 'all',\r\n            todoList: [],\r\n        }\r\n        \r\n        this.toggleMode = this.toggleMode.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleCompleted = this.handleCompleted.bind(this);\r\n        this.handleDeleteItem = this.handleDeleteItem.bind(this);\r\n        this.handleClearCompleted = this.handleClearCompleted.bind(this);\r\n        this.handleSortItem = this.handleSortItem.bind(this);\r\n    }\r\n\r\n    toggleMode() {\r\n        this.setState((prevState) => ({\r\n            darkMode: !prevState.darkMode,\r\n        }));\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        this.setState({\r\n            input: event.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        \r\n        this.setState((prevState) => {\r\n            const prevTodoList = prevState.todoList;\r\n            const newId = String(Number(prevState.idCount) + 1);\r\n            return ({\r\n                input: '',\r\n                idCount: newId,\r\n                todoList: prevTodoList.concat({\r\n                    id: newId,\r\n                    name: event.target.lastChild.value,\r\n                    completed: false\r\n                })\r\n            });\r\n        });\r\n    }\r\n\r\n    handleCompleted(event) {\r\n        const targetId = event.target.parentElement.parentElement.parentElement.id;\r\n\r\n        this.setState((prevState) => {\r\n            const newTodoList = [...prevState.todoList].map( (item) => {\r\n                if(item.id === targetId) item.completed = !item.completed;\r\n                return item;\r\n            });\r\n\r\n            return ({\r\n                todoList: newTodoList\r\n            });\r\n        });\r\n    }\r\n    \r\n    handleDeleteItem(event) {\r\n        const targetId = event.currentTarget.parentElement.id;\r\n\r\n        this.setState((prevState) => {\r\n            const newTodoList = [...prevState.todoList].filter( (item) => (item.id !== targetId));\r\n            return ({\r\n                todoList: newTodoList\r\n            });\r\n        });\r\n    }\r\n\r\n    handleClearCompleted() {\r\n        this.setState((prevState) => ({\r\n            todoList: [...prevState.todoList].filter((item) => !item.completed)\r\n        }));\r\n    }\r\n\r\n    handleSortItem(event) {\r\n        this.setState({\r\n            sort: event.target.id\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const colorMode = this.state.darkMode ? 'dark' : 'light';\r\n        \r\n        return (\r\n            <div id='app-container' className={colorMode}>\r\n                <div id='cover-img' className={colorMode}>\r\n                    <Header \r\n                        darkMode={this.state.darkMode} \r\n                        toggleMode={this.toggleMode}\r\n                    />\r\n                </div>\r\n                <TodoContainer \r\n                    input={this.state.input} \r\n                    sort={this.state.sort}\r\n                    handleInputChange={this.handleInputChange} \r\n                    handleSubmit={this.handleSubmit} \r\n                    handleCompleted={this.handleCompleted} \r\n                    handleDeleteItem={this.handleDeleteItem} \r\n                    handleClearCompleted={this.handleClearCompleted}\r\n                    handleSortItem={this.handleSortItem}\r\n                    todoList={this.state.todoList} \r\n                    darkMode={this.state.darkMode} \r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport './scss/style.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}